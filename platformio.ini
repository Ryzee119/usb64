; MIT License
; 
; Copyright (c) [2020] [Ryan Wendland]
; 
; Permission is hereby granted, free of charge, to any person obtaining a copy
; of this software and associated documentation files (the "Software"), to deal
; in the Software without restriction, including without limitation the rights
; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
; copies of the Software, and to permit persons to whom the Software is
; furnished to do so, subject to the following conditions:
; 
; The above copyright notice and this permission notice shall be included in all
; copies or substantial portions of the Software.
; 
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
; SOFTWARE.
;

[common_env_data]
src_filter =
    +<*.cpp> +<*.c>
    +<n64/*.c>
    +<lib/*.c>
    +<lib/printf/*.c>
    +<lib/tinyalloc/*.c>
    +<tft/*.cpp>

    +<lib/tinyusb/src/*.c>
    +<lib/tinyusb/src/common/*.c>
    +<lib/tinyusb/src/host/*.c>
    +<lib/tinyusb/src/class/hid/*.c>

build_flags =
    -O2
    -Wall
    -Isrc
    -Isrc/n64
    -Isrc/tft
    -Isrc/lib
    -Isrc/lib/printf
    -Isrc/lib/tinyalloc
    -Isrc/lib/tinyusb/src
    ;DEBUG OUTPUT CONFIG
    -DDEBUG_STATUS=1  ;General information
    -DDEBUG_N64=0     ;For debugging N64 low level info
    -DDEBUG_TPAK=0    ;For debugging N64 TPAK low level info. It's complex so has its own flag
    -DDEBUG_USBHOST=0 ;For debugging the USB Host Stack (1,2 or 3. Higher = more output)
    -DDEBUG_MEMORY=0  ;For debugging the memory allocator in external RAM.
    -DDEBUG_FATFS=0   ;For debugging the FATFS io
    -DDEBUG_ERROR=1   ;For showing critical errors

    -DCFG_TUSB_DEBUG_PRINTF="tusb_printf_hook"
    -DCFG_TUSB_DEBUG=DEBUG_USBHOST

    ; Printf Configuration
    -DPRINTF_DISABLE_SUPPORT_FLOAT
    -DPRINTF_DISABLE_SUPPORT_EXPONENTIAL
    -DPRINTF_DISABLE_SUPPORT_LONG_LONG
    -DPRINTF_DISABLE_SUPPORT_PTRDIFF_T

    ; Tinyalloc Configuration
    -DTA_DISABLE_COMPACT

[env:teensy41]
platform = teensy@~4.13.1
board = teensy41
framework = arduino

src_filter =
    ${common_env_data.src_filter}
    +<port_teensy41/ILI9341_t3n/src/*.cpp>
    +<port_teensy41/ILI9341_t3n/src/*.c>
    +<port_teensy41/*.cpp>
    +<port_teensy41/*.c>
    ;TinyUSB (T4 specific)
    +<lib/tinyusb/hw/mcu/nxp/mcux-sdk/devices/MIMXRT1062/*.c>
    +<lib/tinyusb/src/portable/nxp/transdimension/*.c>
    +<lib/tinyusb/src/portable/ehci/*.c>

build_flags =
    ${common_env_data.build_flags}
    -Isrc/port_teensy41/
    -Isrc/port_teensy41/ILI9341_t3n/src
    ;TinyUSB (T4 specific)
    -Isrc/lib/tinyusb/hw/mcu/nxp/mcux-sdk/CMSIS/Include
    -Isrc/lib/tinyusb/hw/mcu/nxp/mcux-sdk/devices/MIMXRT1062
    -Isrc/lib/tinyusb/hw/mcu/nxp/mcux-sdk/devices/MIMXRT1062/drivers
    -Isrc/lib/tinyusb/hw/mcu/nxp/mcux-sdk/drivers/common
    -DCPU_MIMXRT1062DVL6A
    -DCFG_TUSB_MCU=OPT_MCU_MIMXRT10XX
    -DMCU_VARIANT=MIMXRT1062

[env:disco_f750n8]
platform = ststm32
board = disco_f750n8_extflash
framework = stm32cube
; This board has hardly any internal flash. My code is booted from the QSPI external flash.
; This custom linker will copy all code to RAM after boot for noticably better performance.
; I also created code/data areas for flash when I want functions/data to remain on flash to save RAM.
board_build.ldscript = src/port_stm32f7/stm37f750-dk/STM32F750N8HX_EXTFLASH.ld

src_filter =
    ${common_env_data.src_filter}
    +<port_stm32f7/common/*.c>
    +<port_stm32f7/common/fatfs/*.c>
    +<port_stm32f7/common/fatfs/option/*.c>
    +<port_stm32f7/common/fatfs/drivers/*.c>
    +<port_stm32f7/common/bsp_common/*.cpp>
    +<port_stm32f7/common/bsp_drivers/STM32F7508-Discovery/*.c>
    +<port_stm32f7/stm37f750-dk/*.cpp>

build_flags =
    ${common_env_data.build_flags}
    -Isrc/port_stm32f7/stm37f750-dk
    -Isrc/port_stm32f7/common/fatfs
    -Isrc/port_stm32f7/common/fatfs/drivers
    -Isrc/port_stm32f7/common/bsp_drivers/STM32F7508-Discovery
    -DCFG_TUSB_MCU=OPT_MCU_STM32F7
    -DAPPLICATION_ADDRESS=0x90000000U ;My entry point is in QSPI Flash for this board
    -DUSE_HAL_DRIVER
    -DSTM32F750xx
    -DUSB_USB_FS

[env:disco_f769ni]
platform = ststm32
board = disco_f769ni
framework = stm32cube
board_build.ldscript = src/port_stm32f7/stm37f769-dk/STM32F769NIHX_FLASH.ld

src_filter =
    ${common_env_data.src_filter}
    +<port_stm32f7/common/*.c>
    +<port_stm32f7/common/fatfs/*.c>
    +<port_stm32f7/common/fatfs/option/*.c>
    +<port_stm32f7/common/fatfs/drivers/*.c>
    +<port_stm32f7/common/bsp_common/*.cpp>
    +<port_stm32f7/common/bsp_drivers/STM32F769I-Discovery/*.c>
    +<port_stm32f7/common/bsp_drivers/Components/otm8009a/otm8009a.c>
    +<port_stm32f7/stm37f769-dk/*.cpp>

build_flags =
    ${common_env_data.build_flags}
    -Isrc/port_stm32f7/stm37f769-dk
    -Isrc/port_stm32f7/common/fatfs
    -Isrc/port_stm32f7/common/fatfs/drivers
    -Isrc/port_stm32f7/common/bsp_drivers/STM32F769I-Discovery
    -DCFG_TUSB_MCU=OPT_MCU_STM32F7
    -DAPPLICATION_ADDRESS=0x8000000U ;Entry point is internal FLASH.
    -DUSE_HAL_DRIVER
    -DSTM32F769xx
    -DUSB_USB_HS

[env:template]
platform = native

src_filter =
    ${common_env_data.src_filter}
    +<port_template/*.cpp>
    +<port_template/*.c>
    +<lib/tinyusb/src/portable/template/*.c>

build_flags =
    ${common_env_data.build_flags}
    -Isrc/port_template/
    -DCFG_TUSB_MCU=OPT_MCU_NONE
    -lpthread
