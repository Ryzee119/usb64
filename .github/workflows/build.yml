name: Build

on:
  pull_request:
    branches:
      - master
      - dev
  push:
    branches:
      - master
      - dev*

jobs:
  build:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BUILD_TAG: 0

    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: [teensy41,disco_f769ni,disco_f750n8,template]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v1

    - name: Get submoduiles
      run: |
        git submodule init
        git submodule update
        # If manually get TinyUSBs submodules we need otherwise its a huge repo
        cd src/lib/tinyusb
        # Teensy41 Specific
        git submodule init hw/mcu/nxp/mcux-sdk
        git submodule update
        cd ../../../

    - name: Set up Python
      uses: actions/setup-python@v1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        export BUILD_TAG=build-$(date -u +'%Y%m%d%H%M')
        echo "BUILD_TAG=$BUILD_TAG" >> $GITHUB_ENV
        
    - name: Compile code
      run: |
        platformio platform update
        platformio run -e ${{ matrix.board }}
        # platformio system prune --force

    - if: matrix.board != 'template'
      name: Upload firmware artifact to current run
      uses: actions/upload-artifact@v2
      with:
        name: test-firmware-${{ matrix.board }}
        path: |
          .pio/build/**/*.hex
          # .pio/build/**/*.bin # Should not be required for any boards, and makes upload file size incorrect!
          .pio/build/**/*.elf
          # .pio/build/**/*.map # Currently not generated.

    - if: github.event_name == 'push' && github.ref == 'refs/heads/master' #TODO handle previews
      name: Create Release
      id: create_release
      uses: "actions/create-release@v1"
      with:
        tag_name: ${{ env.BUILD_TAG }}
        release_name: ${{ env.BUILD_TAG }}
        draft: false
        prerelease: false

    - if: github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.board != 'template' #TODO handle previews
      name: Upload binary for release
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .pio/build/${{ matrix.board }}/firmware.hex
          asset_name: firmware-${{ matrix.board }}.hex
          asset_content_type: application/hex
